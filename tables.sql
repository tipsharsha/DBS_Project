CREATE TABLE users (
    user_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR2(255) UNIQUE NOT NULL,
    profile_photo_url VARCHAR2(255) DEFAULT ('https://picsum.photos/100?' || DBMS_RANDOM.VALUE(1, 1000000)),
    passkey VARCHAR2(255) NOT NULL,
    bio VARCHAR2(255),
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    email VARCHAR2(50) NOT NULL
);

CREATE TABLE post (
    post_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    caption VARCHAR2(200), 
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    FOREIGN KEY(user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE photos (
    photo_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    photo_url VARCHAR2(255) NOT NULL,
    post_id NUMBER NOT NULL,
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    photo_size NUMBER(5, 2) CHECK (photo_size < 5),
    FOREIGN KEY(post_id) REFERENCES post(post_id) ON DELETE CASCADE
);

CREATE TABLE videos (
    video_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    video_url VARCHAR2(255) NOT NULL,
    post_id NUMBER NOT NULL,
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    video_size NUMBER(5, 2) CHECK (video_size < 10),
    FOREIGN KEY(post_id) REFERENCES post(post_id) ON DELETE CASCADE
);

CREATE TABLE comments (
    comment_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    comment_text VARCHAR2(255) NOT NULL,
    post_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    FOREIGN KEY(post_id) REFERENCES post(post_id) ON DELETE CASCADE,
    FOREIGN KEY(user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE post_likes (
    user_id NUMBER NOT NULL,
    post_id NUMBER NOT NULL,
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    FOREIGN KEY(user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY(post_id) REFERENCES post(post_id) ON DELETE CASCADE,
    PRIMARY KEY(user_id, post_id)
);

CREATE TABLE comment_likes (
    user_id NUMBER NOT NULL,
    comment_id NUMBER NOT NULL,
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    FOREIGN KEY(user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY(comment_id) REFERENCES comments(comment_id) ON DELETE CASCADE,
    PRIMARY KEY(user_id, comment_id)
);

CREATE TABLE follows (
    follower_id NUMBER NOT NULL,
    followee_id NUMBER NOT NULL,
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    FOREIGN KEY(follower_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY(followee_id) REFERENCES users(user_id) ON DELETE CASCADE,
    PRIMARY KEY(follower_id, followee_id)
);

CREATE TABLE hashtags (
    hashtag_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    hashtag_name VARCHAR2(255) UNIQUE NOT NULL,
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP
);

CREATE TABLE hashtag_follow (
    user_id NUMBER NOT NULL,
    hashtag_id NUMBER NOT NULL,
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    FOREIGN KEY(user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY(hashtag_id) REFERENCES hashtags(hashtag_id) ON DELETE CASCADE,
    PRIMARY KEY(user_id, hashtag_id)
);

CREATE TABLE post_tags (
    post_id NUMBER NOT NULL,
    hashtag_id NUMBER NOT NULL,
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    FOREIGN KEY(post_id) REFERENCES post(post_id) ON DELETE CASCADE,
    FOREIGN KEY(hashtag_id) REFERENCES hashtags(hashtag_id) ON DELETE CASCADE,
    PRIMARY KEY(post_id, hashtag_id)
);

CREATE TABLE login (
    login_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    login_time TIMESTAMP DEFAULT SYSTIMESTAMP,
    FOREIGN KEY(user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE location (
    location_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    location_name VARCHAR2(255) UNIQUE NOT NULL,
    post_id NUMBER NOT NULL,
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    FOREIGN KEY(post_id) REFERENCES post(post_id) ON DELETE CASCADE
);

clear screen;